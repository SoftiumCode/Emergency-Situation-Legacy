// (c) SoftiumCode (Ярослав Юрьев), 2023 г.
// Данный код написан мной вручную с самого начала и до конца.
// Если есть идеи по дополнению или улучшению игры — оставляйте запрос в вопросах (issues) на странице игры на гитхабе.
// Ссылка: https://github.com/SoftiumCode/Emergency-Situation
// Не забудьте поставить свои звёзды игре :3

// Инициализация игровых предметов.

class GameItem {
	constructor(options) {
		this.title = options.title;
		this.description = options.description;
	}
}
	
// Инициализация игровых персонажей.

class GamePerson {
	constructor(options) {
		this.name = options.name;
		this.hp = options.hp;
		this.str = options.str;
		this.dex = options.dex;
		this.karma = options.karma;
		this.items = options.items;
	}
	
	check_items() {
		let item_list = [];
		for (let i in this.items) {
			item_list.push(this.items[i].title);
			item_list.push(this.items[i].description);
		}
		alert(`Опустив руки в карманы, проверив все свои сокровенные места, я обнаружил следующее:\n\n${item_list.join('\n\n')}.`);
	}
	
	check_abilities() {
		alert(`Открыв свой загадочный дневник, я обнаружил следующие записи:\n\nИмя: ${this.name}\nЗдоровье: ${this.hp} ед.\nКарма: ${this.karma}\n\nНавыки:\nСила: ${this.str} ед.\nЛовкость: ${this.dex} ед.`)
	}
	
	add_item(item) {
		if (typeof(item) === 'object') {
			this.items.push(item)
			console.log(`Успешно добавлен предмет ${item.title} персонажу ${this.name}!`)
		}
		else {
			console.log(`Не удалось добавить предмет ${item} персонажу ${this.name}!`)
		}
	}
	
	remove_item(item) {
		if (typeof(item) === 'string') {
			this.items = this.items.filter(thing => thing.title != item);
			console.log(`Успешно убран предмет ${item} у персонажа ${this.name}!`)
		}
		else {
			console.log(`Не удалось убрать предмет ${item} у персонажа ${this.name}!`)
		}
	}
	
	has_item(item) {
		if (typeof(item) === 'string') {
			for (i in Character.items) {
				if (Character.items[i].title == item) {
					return true;
				}
			}
		} else {
			return false;
		}
	}
}

// Инициализация игрового акта.
	
	/* 	
		TestAct = new GameAct {
			name: "",
			type: "",
			texts: []
			
		}
	*/
	
	// Инициализация действий
	
	// Шаблоны для наполнения акта предоставлены ниже
	
		// Для действия с выбором
	
		/*{
			type: "choice",
			content: "",
			reaction1() {},
			reaction2() {},
			reaction3() {}
		}*/
		
		// Для обычного текстового действия
		
		/*{
			type: "text",
			content: ""
		}*/
		
		// Для действия с подтверждением
		
		/*{
			type: "confirmation",
			content: ""
			reaction1() {},
			reaction2() {}
		}*/
		
		// Для смены акта
		
		/*{
			type: "switch",
			act_switch() {}
		}*/

class GameAct {
	constructor(options) {
		this.name = options.name;
		this.type = options.type;
		this.texts = options.texts;
	}
		
	start() {
		alert(`${this.type} ${this.name}`)
		for (let i in this.texts) {
			if (check_if_dead()) return;
			if (this.texts[i].type == "text") {
				alert(this.texts[i].content);
			}
			else if (this.texts[i].type == "choice") {
				let check = true;
					do {
						switch(+prompt(this.texts[i].content)) {
							case 1: {
								if (!check_limit()) {
									this.texts[i].reaction1();
									check = false;
								}
								break;
							}
							case 2: {
								if (!check_limit()) {
									this.texts[i].reaction2();
									check = false;
								}
								break;
							}
							case 3: {
								if (!check_limit()) {
									this.texts[i].reaction3();
									check = false;
								}
								break;
							}
							case 4: {
								Character.check_items();
								break;
							}
							case 5: {
								Character.check_abilities();
								break;
							}
							default: {
								alert('Нет, я не могу так поступить-... Мне стоит снова подумать над своим решением.');
								break;
							}
						}
					} while (check == true);	
			}
			else if (this.texts[i].type == 'confirmation') {
				let check = true;
					do {
						switch(confirm(this.texts[i].content)) {
							case true: {
								if (!check_limit()) {
									this.texts[i].reaction1();
									check = false;
								}
								break;
							}
							case false: {
								if (!check_limit()) {
									this.texts[i].reaction2();
									check = false;
								}
								break;
							}
							default: {
								alert('Нет, я не могу так поступить-... Мне стоит снова подумать над своим решением.');
								break;
							}
						}
					} while (check == true);	
			}
			else if (this.texts[i].type == 'switch') {
				this.texts[i].act_switch()
			}
		} 
	}
}

// Проверка на то, погиб ли персонаж или нет.
// При значении здоровья персонажа менее нуля, запускается концовка с гибелью персонажа.

function check_if_dead() {
	if (Character.hp <= 0) {
		alert('Внезапно, я почувствовал, как мои ноги начали дрожать, а в руках появилась внезапная слабость.');
		alert('Кажется, что картинка в моих глазах начала мутнеть — весьма уж странное для меня явление. За собой такого я никогда не замечал.');
		alert('Вскоре я ощутил головную боль, которую ещё ни разу не ощущал в своей жизни.')
		for (i in Character.items) {
			if (Character.items[i].title == "Телефон") {
				alert('Проверив свои карманы, удачно для себя... Да, я обнаружил свой телефон!');
				alert('Я решил как можно скорее набрать на нём знакомый всем номер "112"-...');
				alert('...');
				alert('В трубку были слышны лишь множественные гудки, но ответа так и не было слышно.');
				alert('...');
				alert('Оператор: Оператор 112, что у вас произошло?');
				alert('Неужели! Столь долгое ожидание не было напрасным?');
				alert(`${Character.name}: Здравствуйте! У меня-...`);
				alert('...');
				alert('Не успев закончить фразу, в трубку вновь послышались гудки');
				alert('Проверив свой телефон, я обнаружил лишь одно — пропала сеть.');
				alert('С сетью пропало и изображение в моих глазах, словно кто-то выключил свет.');
				alert('...');
				alert('Вы мертвы.');
				return true;
			}
		}
		alert('Опустив свою руку в карман, я попытался найти в нём свой телефон');
		alert('...');
		alert('Однако его там не было.')
		alert('Мне казалось, что время с каждой секундой шло всё медленнее и медленнее...');
		alert('*Щёлк*');
		alert('Словно кто-то выключил свет в комнате, картинка в моих глазах померкла.');
		alert('...');
		alert('Вы мертвы.');
		return true;
	}
}

// Проверка на то, превышен ли лимит значения навыка у персонажа или же нет
function check_limit(){
	if (Character.hp > 6) {
		alert('Кажется, я настолько здоров, что хоть отправь меня на Марс — проживу там всю жизнь. Не думаю, что смогу стать ещё более здоровым.');
		Character.hp = 6;
		return true;
	} else if (Character.str > 6) {
		alert('Поставь меня в схватке с медведем — он будет мне на равных. Но всё же, я думаю, что сильнее уже стать не смогу.');
		Character.str = 6;
		return true;
	} else if (Character.dex > 6) {
		alert('Со своей ловкостью мне и от пуль уклониться будет не сложно, ха-ха! Навыка мне до конца жизни хватит. Думаю, что более ловким мне уже не стать.');
		Character.dex = 6;
		return true;
	} else {
		return false;
	}
}

// Подтверждение начала игры
function game_confirmation(confirmation = confirm('Действительно ли Вы желаете начать игру?')) {
    if (confirmation) {
        start_game();
    }
}

// Инициализация игры
function start_game() {  
	
	// Инициализация переменных
	
	isDoorClosed = true;
	
	// Инициализация предметов
	
	keys = new GameItem({
		title: "Ключи",
		description: "Обыкновенные ключи от замка на вашей двери. Несмотря на то, что это просто ключи — выглядят они достаточно опасно из-за их заострённых концов."
	});
	
	phone = new GameItem({
		title: "Телефон",
		description: "Незамысловатый кнопочный телефон. В нём правда нет ничего особенного: всё, на что он способен — вызвать отряд МЧС или любой другой специальной службы. Впрочем, разве не для этого он и нужен?\nКрайне крепок, долго держит заряд."
	});
	
	money = new GameItem({
		title: "Деньги",
		description: "Их совсем немного, но всё же, несколько купюр в кармане делают человека более уверенным, чем если бы у него их не было."
	})
	
	knife = new GameItem({
		title: "Нож",
		description: "Складной нож, вроде бабочки. Он мне достался от «Чёрного», за что я ему и благодарен, вечная память ему."
	})
	
	// Инициализация персонажей
	
	Character = new GamePerson({
	name: "Василий П.",
	hp: 6,
	str: 2,
	dex: 2,
	karma: 0,
	items: [keys, phone]
	});
	
	TheBlack = new GamePerson({
	name: "«Чёрный»",
	hp: 5,
	str: 5,
	dex: 3,
	karma: 0,
	items: []
	});
	
	
	// Инициализация актов
	
	ActInstructions = new GameAct({
		name: "КРАТКОЕ ОБУЧЕНИЕ",
		type: "",
		texts: [
		{
			type: "text",
			content: "Игра представляет из себя текстовую новеллу. Действия переключаются посредством нажатия кнопок подтверждения.\n\nНажмите \"ОК\", чтобы проверить это!"
		},
		{
			type: "confirmation",
			content: "Помимо обыкновенных действий, в игре вам будут встречаться и действия с подтверждением!\n\nТут есть всего два варианта ответа — \"Да\" и \"Нет\", однако вам всё равно стоит задуматься над своим решением!\n\nНажмите \"Да\" или \"Нет\", чтобы продолжить.",
			reaction1() {},
			reaction2() {}
		},
		{
			type: "choice",
			content: "В игре также существуют более сложные выборы, чем прошлые — теперь вариантов действий не два, а целых пять!\n\nВпрочем, двое из них не повлияют на вашу дальнейшую жизнь, ведь они только показывают информацию о вашем снаряжении и персонаже. Вы можете посмотреть их, указав цифры \"4\" и \"5\" в поле ответа.\n\n Остальные три действия всегда различаются и приводят к разным результатам. Но сейчас это вам не грозит! Напишите любое число от одного до трёх, чтобы продолжить.",
			reaction1() {},
			reaction2() {},
			reaction3() {}
		},
		{
			type: "text",
			content: "Этих знаний вам с лихвой хватит, чтобы продолжить игру. Все дальнейшие действия теперь зависят только от Вас."
		},
		{
			type: "switch",
			act_switch() {
			Act1.start();
			}
		}
	]
	})
	
	Act1 = new GameAct({
		name: "Утро",
		type: "АКТ 1:",
		texts: [
			{
				type: "text",
				content: "Тишина-...\nКак же бодрит раннее весеннее утро! Только распахнув свои глаза после длительного сна, на них сразу же опустились тёплые солнечные лучи, вслед за этим озарившие комнату светом.",
			},
			{
				type: "text",
				content: "Пока ранние пташки напевали весёлую мелодию, солнечные зайчики игриво бегали по стене, будто подзывая меня к себе."
			},
			{
				type: "text",
				content: "Переведя свой взгляд на одеяло, я решил стянуть его и, наконец, встать с кровати."
			},
			{
				type: "text",
				content: `${Character.name}: Славное утро-... Что же на сегодня мне приготовил новый день?`
			},
			{
				type: "text",
				content: "Встав с кровати, передо мной открылся большой простор для фантазии, ведь столько всего можно сделать простого даже в обыкновенной комнате!\nЯ провёл лёгким и быстрым, как бег антилопы, взглядом по поверхности комнаты, и обнаружил привычные для себя вещи — скакалку, гантели, даже какой-то батончик, который ещё не успел съесть."
			},
			{
				type: "text",
				content: "Однако по-настоящему мой взгляд очаровала невиданная мне раннее книга, обмотанная кожаным переплётом. Поразмышляв некоторое время, мне так и не удалось вспомнить, откуда она. Впрочем, не думаю, что это сейчас важно."
			},
			{
				type: "choice",
				content: "И всё же, пусть занятий много, но всё сразу не сделаешь — нужно выбрать что-то одно.\n\n[1] — Поупражнаться с гантелями\n[2] — Сделать зарядку со скакалкой\n[3] — Съесть батончик\n[4] — Прошерстить по своим карманам\n[5] — Прочитать книгу",
				reaction1() {
					Character.str += 1;
					Character.hp -= 1;
					alert('\"С сегодняшнего дня — начну качаться\" — и так я говорю себе каждый год, ха-ха! Одна и та же мысль первого января, но всё никак не пробовал этим заниматься. Что же — попробуем!');
					alert('Я нагнулся к тумбочке и попробовал оторвать с её поверхности две, уже закалённые временем, советские гантели, на вид весящие не более пяти килограмм.');
					alert('Но только подняв их в воздух, смешные для меня пять килограммов внезапно превратились в тонну неподъёмного железа, и я сразу же отпустил их из рук.');
					alert('\"Неужели я настолько слаб?!\" — подумал я про себя. И ведь действительно, кто-то тягает железо весом в десятки килограмм, а тут и одного такого десятка нету!');
					alert('Взяв всю свою волю в кулак, мне всё же удалось оторвать гантели от тумбы и не уронить их.');
					alert('Потягав их ещё несколько раз от пола к плечам, я почувствовал, что действительно стал сильнее, однако усталость в мышцах дала знать о себе быстро.');
					alert('[Вы получили +1 к силе и -1 к здоровью]');
					alert('Мне стоило бы сначала провести зарядку, прежде чем тягать что-то тяжёлое.');
				},
				reaction2() {
					Character.dex += 1;
					alert('\"С этого года — начну худеть!\" — наверное, многие из нас давали такое обещание в начале года хотя бы раз, но это удавалось сделать немногим.' );
					alert('Пустые обещания не приведут к результату, если не начать действовать... Что же, приступим к действиям!');
					alert('Дотянувшись до самой верхней полки, я схватил, покрытую толстым слоем пыли, скакалку, и, встав посередине комнаты, начал делать простые упражнения.');
					alert('[Вы получили +1 к ловкости]');
					alert('Стоило бы почаще делать утреннюю зарядку-... Говорят, здоровее буду.');
				},
				reaction3() {
					Character.hp += 1;
					alert('Говорят, что здоровое питание прибавляет жизненных сил и улучшает настроение.');
					alert('Я схватил протеиновый батончик с тумбочки и сразу же разорвал его упаковку, принявшись за поедание этого странного \"плода\"');
					alert('Если бы на упаковке не было написано \"Здоровое Питание\", я бы подумал, что меня решили отравить.');
					alert('Впрочем, мне кажется, что я действительно стал здоровее!');
				}
			},
			{
				type: "text",
				content: "Покончив со своими делами, я решил заглянуть в окно, и кажется-..."
			},
			{
				type: "switch",
				act_switch() {
					Act2.start();
				}
			}
		]
	});
	Act2 = new GameAct({
		name: "Начало конца?",
		type: "АКТ 2:",
		texts: [
			{
				type: "text",
				content: "И кажется, будто что-то неладное готовит нам сегодняшний день."
			},
			{
				type: "text",
				content: "Солнце стало светить темнее, чем обычно, хотя облаков и туч возле него было не видать."
			},
			{
				type: "text",
				content: "Вдруг, я заметил, как часы на стене, как старая картина на тумбочке, начали едва заметно трястись. Но это \"едва заметно\" мне удалось заметить."
			},
			{
				type: "text",
				content: "Вслед за часами и картиной начала трястись и сама тумбочка. Кажется, моё предчувствие не наврало мне — что-то неприятное не то что будет, оно уже началось!"
			},
			{
				type: "choice",
				content: "Времени на раздумия у меня нет — лучше начать действовать сейчас, чем ждать последствий. Но всё же, мне нужно принять верное решение.\nВстав неподалёку от шкафа, в углу, я думаю, если что-то будет падать, то он убережёт меня от крупных обломков.\nВ то же время, я могу встать в дверном проёме — говорят, что тут будет наиболее безопасно. Если бы он, конечно, не стоял прямо напротив окна. Впрочем, я не знаю, как далеко летают стеклянные осколки.\nКонечно, можно и попробовать выбежать из дома, но я не уверен, что мне хватит времени, ведь живу я не на первом этаже.\n\n[1] — Присесть возле шкафа, в углу, закрыв голову\n[2] — Встать посреди дверного проёма\n[3] — Попытаться выбежать из дома на улицу\n[4] — Прошерстить по своим карманам\n[5] — Прочитать книгу",
				reaction1() {
					ActStayingInCorner.start();
				},
				reaction2() {
					ActStayingInDoor.start();
					Character.hp -= 1;
				},
				reaction3() {
					ActRunningFromHome.start();
				}
			},
			{
				type: "switch",
				act_switch() {
					Act3.start();
				}
			}
		]
	});
	
	Act3 = new GameAct({
		name: "Улица",
		type: "АКТ 3:",
		texts: [
			{
				type: "text",
				content: "Оказавшись на улице, я пустил свой взгляд в небо, получив в ответ \"привет\" от солнца, в виде ярких солнечных лучей."
			},
			{
				type: "text",
				content: "Ненадолго лишившись зрения, я потёр глаза и осмотрелся вокруг."
			},
			{
				type: "text",
				content: "Пострадавших от землетрясения было не видать. Я обошёл часть нашего двора, но людей я так и не заметил."
			},
			{
				type: "text",
				content: "Обогнув ещё небольшую часть двора, вдалеке я увидел убегающего вдаль человека, на вид явно испуганного. Вслед за ним сразу же выскочила ещё парочка человек, выглядевших, если и не напуганно, то явно удивлённо от своей активной жизни."
			},
			{
				type: "text",
				content: "Стоило мне только отвлечься на двоицу, как тут же в моём поле зрения появилось ещё несколько убегающих человек! На спортсменов они вовсе не были похожи — одежда была обыкновенной, повседневной. Вряд ли марафонисты стали бы бегать в брюках."
			},
			{
				type: "text",
				content: "Помешкав на месте пару десятков секунд, я примерно прикинул, откуда могли бежать наши новоявленные \"спортсмены\" — этим местом мог быть сквер, распологавшийся за домами."
			},
			{
				type: "text",
				content: ""
			}
		]
	});
	
	ActRunningFromHome = new GameAct({
		name: "Побег из дома",
		type: "ЗАДАЧА:",
		texts: [
		{
			type: "text",
			content: 'Я в спешке принимаю решение бежать из дома. На всё про всё у меня есть не более полуминуты, раз землетрясение уже началось.'
		},
		{
			type: "confirmation",
			content: "По дороге к двери, я выхватываю ключи от квартиры, отпираю дверь и уже выбегаю на лестничную площадку. Но сразу же в голову приходит мысль — \"А что если кто-то забежит в квартиру? Нужно запереть\".\nКаждая секунда на счету, но мебель квартире тоже стоит денег.\n\nПотратить время и закрыть дверь, или же нет?",
			reaction1() {
				alert("[Вы заперли дверь]")
				isDoorClosed = true;
				if (Character.dex >= 3) {
					alert('Я резко меняю своё направление и подбегаю к двери. Трясущимися руками, я пытаюсь вставить ключ в дверь и запереть её.');
					alert('Однако трясущиеся руки не помешали мне запереть дверь — я попал сразу же и быстро провернул несколько оборотов на двери, после чего устремился к лестнице.');
					alert('От такой спешки, не ожидая для себя, из моих рук выпали ключи, но времени поднимать у меня их совершенно не было.');
					alert('[Потерян предмет: ключи]')
					Character.remove_item("Ключи");
					alert('Из-за сильной тряски, лестничные пролёты начинают трескаться, а некоторые и вовсе падать.');
					alert('Но мне успешно удалось выбраться из дома без последствий. Я открыл подъездную дверь.');		
				} else {
					alert('Я резко меняю своё направление и подбегаю к двери. Трясущимися руками, я пытаюсь вставить ключ в дверь и запереть её.');
					alert('...');
					alert('Не попал.');
					alert('...');
					alert('Снова не попал.');
					alert('...');
					alert('На третий раз мне всё же удаётся попасть в замок и, делая пару оборотов, я отхожу от двери и движусь в сторону лестницы.');
					alert('От сильной тряски, лестничные пролёты начинают трескаться, а некоторые и вовсе падать.');
					alert(`${Character.name}: Я должен успеть — осталось всего два этажа!`);
					alert('Но не успел.');
					alert('Лестничный пролёт провалился прямо подо мною, а вслед за ним провалился и я.');
					Character.hp -= 6;
				}
			},
			reaction2() {
				alert("[Вы оставили дверь открытой]")
				isDoorClosed = false;
				}
		}
		]
	});
	
	ActStayingInCorner = new GameAct({
		name: "Пережить землетрясение",
		type: "ЗАДАЧА:",
		texts: [
			{
				type: "text",
				content: "Идея спрятаться в углу возле шкафа показалась мне интересной. Может, она действительно сработает?"
			},
			{
				type: "confirmation",
				content: "Я сел в углу и накрыл свою голову руками, дабы какие-либо части моего потолка не прилетели мне по макушке. Однако, как вариант, я так же мог бы прикрыться вдовесок дощечкой, удачно оказавшейся возле меня.\n\nИспользовать дощечку как защиту или же не стоит?",
				reaction1() {
					if (Character.str >= 3) {
						alert('Я не мог разглядеть из-за доски, что происходило в комнате, но, кажется, потолок уже начал сыпаться. Началось!');
						alert('Я ощутил, что весьма увесистый кусок потолка свалился прямо по моей дощечке.');
						alert('Однако мне удалось удержать дощечку — она не отлетела мне в голову, а \"снаряд\" из потолка отскочил в другую сторону.');
						alert('Впрочем, через пару мгновений тряска утихла и по ощущениям — до конца.');
						alert('Я решил выйти на улицу и попробовать помочь пострадавшим, если они, конечно, есть-...')
					}
					else {
						alert('Я не мог разглядеть из-за доски, что происходило в комнате, но, кажется, потолок уже начал сыпаться, а окно разбилось. Началось!');
						alert('Я ощутил, что весьма увесистый кусок потолка свалился прямо по моей дощечке.');
						alert('...');
						alert('Однако кусок пробил дощечку и ударил мне прямо в голову.');
						Character.hp -= 6;
					}
				},
				reaction2() {
					alert('С потолка начала сыпаться пыль, а затем с него начали падать небольшие кусочки потолка.');
					alert('Один из таких кусочков назло попал мне прямо по макушке!');
					alert('...');
					Character.hp -= 1;
					alert('[Вы потеряли 1 здоровье]');
					alert('Впрочем, через пару мгновений тряска утихла и по ощущениям — до конца.');
					alert('Я решил выйти на улицу и попробовать помочь пострадавшим, если они, конечно, есть-...')
				},
			}
		]
	});
	
	ActStayingInDoor = new GameAct({
		name: "Пережить землетрясение",
		type: "ЗАДАЧА:",
		texts: [
			{
				type: "text",
				content: "Сомнительной казалась мне идея спрятаться в дверном проёме. Ведь как бы то ни было, но проём стоял прямо напротив окна, пусть и в нескольких метрах от него."
			},
			{
				type: "text",
				content: "Однако выбор уже сделан, времени на перебежку у меня нет — остаётся лишь ждать самого начала."
			},
			{
				type: "text",
				content: "Кажется, потолок уже начал сыпаться. Прямо передо мной упал увесистый кусок потолка, а следом за ним разбилось окно и осколки полетели прямо в меня!"
			},
			{
				type: "text",
				content: "Я почувствовал сильное жжение в своих руках — часть осколков настигла меня и впилась прямо в руки, пусть и неглубоко."
			},
			{
				type: "text",
				content: "[Вы потеряли 1 здоровье]"
			},
			{
				type: "text",
				content: "В остальном же, я был цел и здоров — дверной проём не рухнул, потолок не упал на меня..."
			},
			{
				type: "text",
				content: "Я решил выбежать на улицу, дабы найти помощь и, если таковые будут, помочь пострадавшим, ведь им наверняка досталось хуже, чем мне."
			}
		]
	});
	
	// Начало акта
	
    let confirmation = confirm('Желаете ли Вы пройти краткое обучение?');
	if (confirmation) {
		ActInstructions.start()
	}
	else {
		Act1.start()
	}
}

// (c) SoftiumCode (Ярослав Юрьев), 2023 г.